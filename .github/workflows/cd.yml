name: CD

on:
  push:
    branches:
      - main
    tags:
      - '*'

permissions:
  contents: write
  packages: write

jobs:
  create-release-tag:
    if: github.ref_type == 'branch' && github.ref_name == 'main'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - uses: dorny/paths-filter@v3
        id: changes
        with:
          filters: |
            version:
              - 'VERSION'

      - name: Read version
        id: version
        run: |
          VERSION=$(tr -d "\n\r" < VERSION)
          echo "version=$VERSION" >> "$GITHUB_OUTPUT"

      - name: Tag release if VERSION changed
        if: steps.changes.outputs.version == 'true'
        env:
          TAG: ${{ steps.version.outputs.version }}
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git fetch origin --tags
          if git rev-parse "refs/tags/$TAG" >/dev/null 2>&1 || \
             git ls-remote --exit-code --tags origin "$TAG" >/dev/null 2>&1; then
            echo "Tag $TAG already exists; skipping"
            exit 0
          fi
          git tag -a "$TAG" -m "Release $TAG"
          git push origin "$TAG"

  publish-release-image:
    if: github.ref_type == 'tag'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Ensure tag targets main
        env:
          DEFAULT_BRANCH: main
        run: |
          git fetch origin "$DEFAULT_BRANCH"
          if ! git merge-base --is-ancestor HEAD "origin/$DEFAULT_BRANCH"; then
            echo "Tag must point to the main branch" >&2
            exit 1
          fi

      - name: Read version
        id: version
        run: |
          VERSION=$(tr -d "\n\r" < VERSION)
          echo "version=$VERSION" >> "$GITHUB_OUTPUT"

      - name: Ensure tag matches VERSION
        env:
          TAG_NAME: ${{ github.ref_name }}
          EXPECTED_TAG: ${{ steps.version.outputs.version }}
        run: |
          if [[ "$TAG_NAME" != "$EXPECTED_TAG" ]]; then
            echo "Tag $TAG_NAME does not match expected $EXPECTED_TAG" >&2
            exit 1
          fi

      - name: Log in to GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push release image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: |
            ghcr.io/${{ github.repository_owner }}/sarif-converter:latest
            ghcr.io/${{ github.repository_owner }}/sarif-converter:${{ steps.version.outputs.version }}
